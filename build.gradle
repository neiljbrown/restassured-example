/*
 * Copyright 2017-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// *********************************************************************************************************************
// Enable plugins
// *********************************************************************************************************************
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

// *********************************************************************************************************************
// Project Properties
// *********************************************************************************************************************
// Standard project properties. These are used as default values by some assembly and release task, e.g. jar
 
//project.name - Property defined in settings.gradle, overriding the default used by Gradle which is based on proj dir
project.group = 'com.neiljbrown.examples'
project.description = 'An example of how to use the REST Assured library to implement black-box, functional tests for REST APIs.'

// Set Java source & class versions to use when compiling. Needs to be defined after applying java plugin to take affect
project.sourceCompatibility = 8
project.targetCompatibility = 8

// Extra user-defined project properties
ext {
  
}

// *********************************************************************************************************************
// Task configuration
// *********************************************************************************************************************

repositories {
  mavenCentral()
}

dependencies {
  //---- Test dependencies
  testCompile("junit:junit:${junitVersion}")
  testCompile("io.rest-assured:rest-assured:${restAssuredVersion}")
  testCompile("org.assertj:assertj-core:${assertjVersion}")
  testCompile("org.slf4j:slf4j-api:${slf4jVersion}")
  testCompile("ch.qos.logback:logback-classic:${logbackClassicVersion}")
  testCompile("com.github.tomakehurst:wiremock:${wiremockVersion}")
  testCompile("org.apache.commons:commons-configuration2:${apacheCommonsConfigVersion}")
  testCompile("commons-beanutils:commons-beanutils:${apacheCommonsBeanUtilsVersion}")
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    downloadJavadoc = true
  }
}

test {
  testLogging {
    showStandardStreams = true // Log any output that the tests write to stdout or stderr
    events "passed", "skipped", "failed" // Log the execution of each test and its result
  }
}